//
// Created by ¡ı Ê¬¸ on 16/7/29.
//

#include "CLanguage.h"

void CLanguage::Utf8A2B(string &src)
{
    Utf8Stream utf8_ss(src);

    string tgt;
    string utf8_char;
    while(utf8_ss.ReadOneCharacter(utf8_char))
    {
        tgt += utf8_char_a2b(utf8_char);
    }

    src = tgt;
}

string & CLanguage::SplitStrByChar(string & str)
{
    Utf8Stream utf8_ss(str);
    str.clear();

    string utf8_char;
    while(utf8_ss.ReadOneCharacter(utf8_char))
    {
        str += utf8_char + " ";
    }

    return str;
}

void CLanguage::StandardSentFilter(SentProcCell &sent_cell)
{
    // TODO
}


// private
string & CLanguage::utf8_char_a2b(string & utf8_char)
{
    static const char UTF8_SBC_SET[][4] = { {0xe3, 0x80, 0x80, 0x00 },  {0xef, 0xbc, 0x81, 0x00 },  {0xef, 0xbc, 0x82, 0x00 },  {0xef, 0xbc, 0x83, 0x00 },
                                            {0xef, 0xbc, 0x84, 0x00 },  {0xef, 0xbc, 0x85, 0x00 },  {0xef, 0xbc, 0x86, 0x00 },  {0xef, 0xbc, 0x87, 0x00 },
                                            {0xef, 0xbc, 0x88, 0x00 },  {0xef, 0xbc, 0x89, 0x00 },  {0xef, 0xbc, 0x8a, 0x00 },  {0xef, 0xbc, 0x8b, 0x00 },
                                            {0x00, 0x00, 0x00, 0x00 },  {0xef, 0xbc, 0x8d, 0x00 },  {0xef, 0xbc, 0x8e, 0x00 },  {0xef, 0xbc, 0x8f, 0x00 },
                                            {0xef, 0xbc, 0x90, 0x00 },  {0xef, 0xbc, 0x91, 0x00 },  {0xef, 0xbc, 0x92, 0x00 },  {0xef, 0xbc, 0x93, 0x00 },
                                            {0xef, 0xbc, 0x94, 0x00 },  {0xef, 0xbc, 0x95, 0x00 },  {0xef, 0xbc, 0x96, 0x00 },  {0xef, 0xbc, 0x97, 0x00 },
                                            {0xef, 0xbc, 0x98, 0x00 },  {0xef, 0xbc, 0x99, 0x00 },  {0xef, 0xbc, 0x9a, 0x00 },  {0xef, 0xbc, 0x9b, 0x00 },
                                            {0xef, 0xbc, 0x9c, 0x00 },  {0xef, 0xbc, 0x9d, 0x00 },  {0xef, 0xbc, 0x9e, 0x00 },  {0xef, 0xbc, 0x9f, 0x00 },
                                            {0xef, 0xbc, 0xa0, 0x00 },  {0xef, 0xbc, 0xa1, 0x00 },  {0xef, 0xbc, 0xa2, 0x00 },  {0xef, 0xbc, 0xa3, 0x00 },
                                            {0xef, 0xbc, 0xa4, 0x00 },  {0xef, 0xbc, 0xa5, 0x00 },  {0xef, 0xbc, 0xa6, 0x00 },  {0xef, 0xbc, 0xa7, 0x00 },
                                            {0xef, 0xbc, 0xa8, 0x00 },  {0xef, 0xbc, 0xa9, 0x00 },  {0xef, 0xbc, 0xaa, 0x00 },  {0xef, 0xbc, 0xab, 0x00 },
                                            {0xef, 0xbc, 0xac, 0x00 },  {0xef, 0xbc, 0xad, 0x00 },  {0xef, 0xbc, 0xae, 0x00 },  {0xef, 0xbc, 0xaf, 0x00 },
                                            {0xef, 0xbc, 0xb0, 0x00 },  {0xef, 0xbc, 0xb1, 0x00 },  {0xef, 0xbc, 0xb2, 0x00 },  {0xef, 0xbc, 0xb3, 0x00 },
                                            {0xef, 0xbc, 0xb4, 0x00 },  {0xef, 0xbc, 0xb5, 0x00 },  {0xef, 0xbc, 0xb6, 0x00 },  {0xef, 0xbc, 0xb7, 0x00 },
                                            {0xef, 0xbc, 0xb8, 0x00 },  {0xef, 0xbc, 0xb9, 0x00 },  {0xef, 0xbc, 0xba, 0x00 },  {0xef, 0xbc, 0xbb, 0x00 },
                                            {0xef, 0xbc, 0xbc, 0x00 },  {0xef, 0xbc, 0xbd, 0x00 },  {0xef, 0xbc, 0xbe, 0x00 },  {0xef, 0xbc, 0xbf, 0x00 },
                                            {0xef, 0xbd, 0x80, 0x00 },  {0xef, 0xbd, 0x81, 0x00 },  {0xef, 0xbd, 0x82, 0x00 },  {0xef, 0xbd, 0x83, 0x00 },
                                            {0xef, 0xbd, 0x84, 0x00 },  {0xef, 0xbd, 0x85, 0x00 },  {0xef, 0xbd, 0x86, 0x00 },  {0xef, 0xbd, 0x87, 0x00 },
                                            {0xef, 0xbd, 0x88, 0x00 },  {0xef, 0xbd, 0x89, 0x00 },  {0xef, 0xbd, 0x8a, 0x00 },  {0xef, 0xbd, 0x8b, 0x00 },
                                            {0xef, 0xbd, 0x8c, 0x00 },  {0xef, 0xbd, 0x8d, 0x00 },  {0xef, 0xbd, 0x8e, 0x00 },  {0xef, 0xbd, 0x8f, 0x00 },
                                            {0xef, 0xbd, 0x90, 0x00 },  {0xef, 0xbd, 0x91, 0x00 },  {0xef, 0xbd, 0x92, 0x00 },  {0xef, 0xbd, 0x93, 0x00 },
                                            {0xef, 0xbd, 0x94, 0x00 },  {0xef, 0xbd, 0x95, 0x00 },  {0xef, 0xbd, 0x96, 0x00 },  {0xef, 0xbd, 0x97, 0x00 },
                                            {0xef, 0xbd, 0x98, 0x00 },  {0xef, 0xbd, 0x99, 0x00 },  {0xef, 0xbd, 0x9a, 0x00 },  {0xef, 0xbd, 0x9b, 0x00 },
                                            {0xef, 0xbd, 0x9c, 0x00 },  {0xef, 0xbd, 0x9d, 0x00 },  {0xef, 0xbd, 0x9e, 0x00 },  0};

    static const char UTF8_DBC_SET[][2] = {  {0x20, 0x00 },  {0x21, 0x00 },  {0x22, 0x00 },  {0x23, 0x00 },
                                             {0x24, 0x00 },  {0x25, 0x00 },  {0x26, 0x00 },  {0x27, 0x00 },
                                             {0x28, 0x00 },  {0x29, 0x00 },  {0x2a, 0x00 },  {0x2b, 0x00 },
                                             {0x00, 0x00 },  {0x00, 0x00 },  {0x2e, 0x00 },  {0x2f, 0x00 },
                                             {0x30, 0x00 },  {0x31, 0x00 },  {0x32, 0x00 },  {0x33, 0x00 },
                                             {0x34, 0x00 },  {0x35, 0x00 },  {0x36, 0x00 },  {0x37, 0x00 },
                                             {0x38, 0x00 },  {0x39, 0x00 },  {0x3a, 0x00 },  {0x3b, 0x00 },
                                             {0x3c, 0x00 },  {0x3d, 0x00 },  {0x3e, 0x00 },  {0x3f, 0x00 },
                                             {0x40, 0x00 },  {0x41, 0x00 },  {0x42, 0x00 },  {0x43, 0x00 },
                                             {0x44, 0x00 },  {0x45, 0x00 },  {0x46, 0x00 },  {0x47, 0x00 },
                                             {0x48, 0x00 },  {0x49, 0x00 },  {0x4a, 0x00 },  {0x4b, 0x00 },
                                             {0x4c, 0x00 },  {0x4d, 0x00 },  {0x4e, 0x00 },  {0x4f, 0x00 },
                                             {0x50, 0x00 },  {0x51, 0x00 },  {0x52, 0x00 },  {0x53, 0x00 },
                                             {0x54, 0x00 },  {0x55, 0x00 },  {0x56, 0x00 },  {0x57, 0x00 },
                                             {0x58, 0x00 },  {0x59, 0x00 },  {0x5a, 0x00 },  {0x5b, 0x00 },
                                             {0x5c, 0x00 },  {0x5d, 0x00 },  {0x5e, 0x00 },  {0x5f, 0x00 },
                                             {0x60, 0x00 },  {0x61, 0x00 },  {0x62, 0x00 },  {0x63, 0x00 },
                                             {0x64, 0x00 },  {0x65, 0x00 },  {0x66, 0x00 },  {0x67, 0x00 },
                                             {0x68, 0x00 },  {0x69, 0x00 },  {0x6a, 0x00 },  {0x6b, 0x00 },
                                             {0x6c, 0x00 },  {0x6d, 0x00 },  {0x6e, 0x00 },  {0x6f, 0x00 },
                                             {0x70, 0x00 },  {0x71, 0x00 },  {0x72, 0x00 },  {0x73, 0x00 },
                                             {0x74, 0x00 },  {0x75, 0x00 },  {0x76, 0x00 },  {0x77, 0x00 },
                                             {0x78, 0x00 },  {0x79, 0x00 },  {0x7a, 0x00 },  {0x7b, 0x00 },
                                             {0x7c, 0x00 },  {0x7d, 0x00 },  {0x7e, 0x00 },  0};

    size_t i=0;
    const char * p_sbc = UTF8_SBC_SET[i];
    while(i<95)
    {
        if(utf8_char == p_sbc)
        {
            utf8_char = UTF8_DBC_SET[i];
            return utf8_char;
        }

        ++i;
        p_sbc = UTF8_SBC_SET[i];
    }

    return utf8_char;
}